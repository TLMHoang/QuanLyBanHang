<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bsHang.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAETBSgBEwkoARMFKAETB
        SgBEwUoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEwUoARMJKAEG9
        SwBEwUokRMFKCUTBSgBEwUoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARMFKAETC
        SgBEwUoARMFKSUTBSthEwUqBRMFKBkTBSgBEwUoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAETB
        SgBEwkoARMFKAETBSkhEwUrhRMFK/0TBSvlEwUqBRMFKCUTBSgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABEwUoARMJKAETBSgBEwUpIRMFK4UTBSv9EwUr/RMFK/0TBStlEwUokRMFKAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEwUoARMFKAETBSg5EwUqcRMFK/kTB
        Sv9EwUr5RMFKw0TBSoNEwUphRMFKYkTBSoNEwUrDRMFK+UTBSv9EwUr+RMFKnETBSg5EwUoARMFKAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEC/QABEwUoARMFKAETB
        Sg5EwUqDRMFK7UTBSv9EwUr/RMFK/0TBSv9EwUr/RMFK/0TBSv9EwUr/RMFK7UTBSoNEwUoORMFKAETB
        SgBNzE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAETD
        TABEwUoARMFKAEXCSgJEwUo9RMFKnUTBSt1EwUr2RMFK/UTBSv1EwUr2RMFK3UTBSp5EwUo9RMJKAkTB
        SgBEwUoARcFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADnGVQBEwUoARMFKAETBSgBEwUoCRMFKHkTBSkFEwUpWRMFKVkTBSkFEwUoeRMFKAkTB
        SgBEwUoARMFKAEC/QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEwUkARMFKAETBSgBEwUoARMFKAETBSgBEwUoARMFKAETB
        SgBEwUoARMFKAETBSgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////wf///4D///8Af//+AH///AB///gAf//wAH//4AD/AAAB/AA
        AA/gAAAfwAAAP8AAAH+AAAD/gAAB/4A8Af+AfgH/gP8B/4D/Af+A/wH/gP8B/4B+Af+APAH/gAAB/4AA
        Af/AAAP/wAAD/+AAB//wAA///AA///////8=
</value>
  </data>
</root>